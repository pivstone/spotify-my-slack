{"version":3,"sources":["utils/auth.tsx","AuthButtons.tsx","UserSettings.tsx","App.tsx","index.tsx"],"names":["getSessionData","sessionCookie","Cookies","get","undefined","JSON","parse","atob","split","err","console","error","isAuthenticated","session","user_id","AuthButtons","buttons","push","Button","key","variant","disabled","color","href","spotify_id","slack_id","className","UserSettings","name","useState","useCustomEmojis","state","setState","Typography","FormGroup","FormControlLabel","control","Checkbox","checked","onChange","event","target","value","label","App","AppBar","position","Toolbar","Container","maxWidth","Paper","elevation","align","rel","theme","createMuiTheme","palette","primary","main","contrastText","secondary","warning","info","success","text","overrides","MuiButton","root","borderRadius","props","disableElevation","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.9779b02f.chunk.js","sourcesContent":["import Cookies from \"js-cookie\";\n\ninterface SessionData {\n  user_id?: number;\n  slack_id?: string;\n  slack_access_token?: string;\n  spotify_id?: string;\n  spotify_expires_at?: string;\n  spotify_access_token?: string;\n  spotify_refresh_token?: string;\n}\n\nexport const getSessionData = () => {\n  const sessionCookie = Cookies.get(\"session\");\n  if (sessionCookie === undefined) {\n    return null;\n  }\n  try {\n    return JSON.parse(atob(sessionCookie.split(\".\")[0])) as SessionData;\n  } catch (err) {\n    console.error(`Session cookie could not be decoded: ${err}`);\n    return null;\n  }\n};\n\nexport const isAuthenticated = () => {\n  const session = getSessionData();\n  return session?.user_id ? true : false;\n};\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport \"./AuthButtons.scss\";\nimport { getSessionData, isAuthenticated } from \"./utils/auth\";\n\nconst AuthButtons: React.FC = () => {\n  const session = getSessionData();\n  const buttons: React.ReactNode[] = [];\n  if (isAuthenticated()) {\n    buttons.push(\n      <Button key=\"monitor-message\" variant=\"contained\" disabled>\n        Your status is being monitored\n      </Button>\n    );\n    buttons.push(\n      <Button\n        key=\"delete-account\"\n        variant=\"outlined\"\n        color=\"default\"\n        href=\"/delete-account\"\n      >\n        Stop\n      </Button>\n    );\n  } else {\n    buttons.push(\n      session?.spotify_id ? (\n        <Button key=\"spotify-message\" variant=\"contained\" disabled>\n          Spotify Connected\n        </Button>\n      ) : (\n        <Button\n          key=\"spotify-grant\"\n          variant=\"contained\"\n          color=\"primary\"\n          href=\"/spotify-grant\"\n        >\n          Connect Spotify\n        </Button>\n      )\n    );\n    buttons.push(\n      session?.slack_id ? (\n        <Button key=\"slack-message\" variant=\"contained\" disabled>\n          Slack Connected\n        </Button>\n      ) : (\n        <Button\n          key=\"slack-grant\"\n          variant=\"contained\"\n          color=\"secondary\"\n          href=\"/slack-grant\"\n        >\n          Connect Slack\n        </Button>\n      )\n    );\n  }\n  if (session?.user_id || session?.spotify_id || session?.slack_id) {\n    buttons.push(\n      <Button key=\"sign-out\" variant=\"text\" color=\"default\" href=\"/sign-out\">\n        Sign Out\n      </Button>\n    );\n  }\n\n  return <div className=\"AuthButtons\">{buttons}</div>;\n};\n\nexport default AuthButtons;\n","import {\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  Typography\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { isAuthenticated } from \"./utils/auth\";\n\nconst UserSettings: React.FC = () => {\n  const [state, setState] = useState({ useCustomEmojis: false });\n  const handleChange = (name: string) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  if (!isAuthenticated()) {\n    return null;\n  }\n\n  return (\n    <div className=\"UserSettings\">\n      <Typography variant=\"h5\">Preferences</Typography>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={state.useCustomEmojis}\n              onChange={handleChange(\"useCustomEmojis\")}\n              value=\"useCustomEmojis\"\n            />\n          }\n          label=\"Set status emojis based on song and artist name üëâü•∞üéâ\"\n        />\n      </FormGroup>\n    </div>\n  );\n};\n\nexport default UserSettings;\n","import {\n  AppBar,\n  Container,\n  Paper,\n  Toolbar,\n  Typography\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./App.scss\";\nimport AuthButtons from \"./AuthButtons\";\nimport UserSettings from \"./UserSettings\";\nimport { isAuthenticated } from \"./utils/auth\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__backdrop\"></div>\n      <AppBar position=\"static\" color=\"default\" className=\"App__bar\">\n        <Toolbar>\n          <Typography variant=\"h6\" className=\"App__bar__title\">\n            <span>Spotify my Slack</span>\n            <small>Show what's playing on Spotify as your Slack status</small>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container className=\"App__container\" maxWidth={false}>\n        <Paper className=\"App__container__content\" elevation={4}>\n          <Typography className=\"App__container__content_h\" variant=\"h4\">\n            {isAuthenticated()\n              ? \"Setup complete. Spotify üîÄ Slack\"\n              : \"Connect your Spotify and Slack accounts\"}\n          </Typography>\n          <Typography className=\"App__container__content_p\">\n            Show what's currently playing on Spotify as your Slack status. As an\n            optional bonus, status emojis can be set based on the song and\n            artist name.\n            {isAuthenticated()\n              ? null\n              : \" Sign in with your Spotify and Slack accounts to get started\"}\n          </Typography>\n          <AuthButtons />\n          <UserSettings />\n        </Paper>\n        <footer>\n          <Typography align=\"center\">\n            <a\n              href=\"https://github.com/micthiesen/spotify-my-slack\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Built\n            </a>{\" \"}\n            by{\" \"}\n            <a\n              href=\"http://www.micthiesen.ca\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Michael\n            </a>{\" \"}\n            ‚ù§Ô∏è\n          </Typography>\n        </footer>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import { createMuiTheme, CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1db954\", // Spotify green\n      contrastText: \"#ffffff\"\n    },\n    secondary: {\n      main: \"#ecb22e\", // Slack orange\n      contrastText: \"#ffffff\"\n    },\n    error: {\n      main: \"#e01e5a\", // Slack red\n      contrastText: \"#ffffff\"\n    },\n    warning: {\n      main: \"#ecb22e\", // Slack orange\n      contrastText: \"#ffffff\"\n    },\n    info: {\n      main: \"#36c5f0\", // Slack blue\n      contrastText: \"#ffffff\"\n    },\n    success: {\n      main: \"#1db954\", // Spotify green\n      contrastText: \"#ffffff\"\n    },\n    text: {\n      primary: \"#424242\"\n    }\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        borderRadius: \"2px\"\n      }\n    }\n  },\n  props: {\n    MuiButton: {\n      disableElevation: true\n    }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}